image: "registry.gitlab.com/wenqisong/desktopvr-template:latest"

stages:
  - build
  - post_build

.build: &build
  stage: build
  <<: *unity_before_script
  script: |
    echo "Building for $BUILD_TARGET"
    export BUILD_PATH=./Builds/$BUILD_TARGET/$CI_PIPELINE_ID
    mkdir -p $BUILD_PATH
    ls -alh $BUILD_PATH
    xvfb-run --auto-servernum --server-args='-screen 0 640x480x24' \
      /opt/Unity/Editor/Unity \
        -projectPath $(pwd) \
        -quit \
        -batchmode \
        -buildTarget $BUILD_TARGET \
        -customBuildTarget $BUILD_TARGET \
        -customBuildName $BUILD_NAME \
        -customBuildPath $BUILD_PATH \
        -customBuildOptions None \
        -executeMethod BuildCommand.PerformBuild \
        -logFile
    ls -la $BUILD_PATH
    ls -la ./Builds/$BUILD_TARGET
    [ -n "$(ls -A $BUILD_PATH)" ] # fail job if build folder is empty

build-Android:
  only:
    - develop
  image: "registry.gitlab.com/wenqisong/desktopvr-template:latest"
  <<: *build
  variables:
    BUILD_TARGET: Android
    
generate-android-apk:
  image: gableroux/unity:2019.2.11f1-android
  stage: post_build
  script: |
    cd ./Builds
    cd ./$BUILD_TARGET
    cd ./$BUILD_NAME
    cd ./$BUILD_NAME
    ls -ahl
    gradle assembleRelease
    ls -ahl
    find . -name '*.apk'
    ls -ahl build/outputs/apk/
# retry because sometimes checkingout artifacts fails
  retry: 2
  artifacts:
    name: "$BUILD_NAME $CI_PIPELINE_IID $BUILD_TARGET"
    paths:
      - ./Builds/$BUILD_TARGET/$BUILD_NAME/$BUILD_NAME/build/outputs/apk/release/$BUILD_NAME-release.apk

    expire_in: 1 day
  variables:
    BUILD_TARGET: Android
